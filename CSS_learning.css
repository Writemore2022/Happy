/*  CSS 주석 달기
        ctrl + /를 사용하여 입력
*/

/*  CSS
        HTML 문서를 꾸밀 때 사용하는 스타일을 정리한 문서

    선택자
        꾸미고 싶은 HTML 요소를 선택
    속성명
        꾸미고 싶은 속성명을 입력
    속성값
        꾸미고 싶은 방법의 속성값을 입력
    ex) A {
            x: a;
        }

    CSS 적용방법

    Inline style sheet
        HTML 태그의 style 속성에 속성명과 값을 작성
        여러 개의 속성을 적용하고 싶다면 ;을 사용하여 작성
        바뀌지 않는 스타일의 경우에만 사용
    Internal style sheet
        HTML의 <head> 태그 내에 <style> 태그를 사용하여 정의
        많은 페이지에 동일한 스타일 규칙을 적용시키기 위해 external style을 활용
    External style sheet
        CSS 파일을 외부에 정의한 뒤, HTML 파일에 연결하여 사용
            <link rel="stylesheet" href="x.css">
            <head> 태그 내에 선언해야 함

    CSS 출처

    제작자 스타일 (Author style)
        웹사이트를 제작하는 제작자가 작성한 stylesheet
    사용자 스타일 (User style)
        사이트를 방문하는 일반 사용자들이 구성한 stylesheet
    브라우저 스타일 (Browser style)
        브라우저마다 기본적으로 지정하고 있는 style

    CSS 출처 적용 우선순위
        사용자 !important > 제작자 !important > 제작자 > 사용자 > 브라우저
            !important는 cascading의 흐름을 깰 수 있으니 주의해서 사용

    Cascading
        style이 우선순위에 맞게 연속적으로 적용됨
*/

/*  기본 선택자

    전체 선택자 (Universal selector)
        *를 사용하여 모든 요소를 선택
            * {}
        브라우저 기본 스타일을 초기화할 때 주로 사용
    타입 선택자 (Type seletor)
        tagname을 사용하여 특정 태그 이름을 가진 모든 요소를 선택
    클래스 선택자 (Class selector)
        .classname을 사용하여 주어진 class 명을 가진 모든 요소를 선택
    ID 선택자 (ID selector)
        #idname을 사용하여 id 속성에 맞는 요소를 선택
        웹 문서에서 고유한 하나의 태그에만 사용해야 함
    속성 선택자 (Attribute selector)
        a[href]
            <a> 태그에 title 속성이 존재하는 모든 요소
        a[href="x"]
            <a> 태그에 href 속성이 "x" 해당 값과 일치하는 요소
        a[href*="a"]
            <a> 태그에 href 속성에 "a" 문자열을 포함하는 요소
        a[href^="abc"]
            <a> 태그에 href 속성이 "abc"로 시작하는 요소
        a[href$=".xyz"]
            <a> 태그에 href 속성이 ".xyz"로 끝나는 요소
        a[class~="jns"]
            <a> 태그의 class 속성 중 class 속성에 'jns'라는 단어가 포함된 요소
    그룹 선택자
        선택자를 ,로 구분하여 여러 선택자를 나열
        같은 스타일을 여러 선택자에 대해 동시에 정의

    결합자

    자손 결합자
        (공백)을 사용하여 첫 번째 요소의 자손인 태그를 선택
    자식 결합자
        >를 사용하여 첫 번째 요소의 바로 아래 자식인 태그를 선택
    일반 형제 결합자
        ~를 사용하여 첫 번째 요소를 뒤따르면서 같은 부모를 공유하는 두 번째 요소를 선택
    인접 형제 결합자
        +를 사용하여 첫 번째 요소의 바로 뒤에 위치하면서 같은 부모를 공유하는 두 번째 요소를 선택

    의사 클래스/요소

    의사 클래스 (Pseudo class) = 가상 클래스
        선택하고자 하는 HTML 요소의 특별한 상태(state)를 명시할 때 사용
        ex) selector:pseudo class name {attr:value;}
        :link
            href 속성을 가진 <a>, <area>, <link> 중 방문하지 않은 요소를 선택
        :visited
            사용자가 방문한 적이 있는 링크를 표시
        :hover
            사용자의 마우스 포인터가 요소 위애 올라가 있으면 선택
        :active
            사용자가 활성화한 요소를 표시
        :focus
            포커스를 받은 요소를 표시
            사용자가 요소를 클릭 또는 탭하거나 키보드의 tab키로 선택했을 때 발동
        :not(selector)
            not(selector) 내에 포함된 요소를 제외
    의사 요소 (Pseudo element) = 가상 요소
        해당 HTML 요소의 특정 부분만을 선택
        ex) selector::pseudo element name {attr:value;}
        ::first-letter
            텍스트의 첫 글자만을 선택
            block-level-element에만 사용할 수 있음
        ::first-line
            텍스트의 첫 라인만을 선택
            block-level-element에만 사용할 수 있음
        ::before
            특정 요소의 내용(content) 부분 바로 앞에 다른 요소를 삽입할 때 사용
        ::after
            특정 요소의 내용(content) 부분 바로 뒤에 다른 요소를 삽입할 때 사용
        ::selection
            해당 요소에서 사용자가 선택한 부분만을 선택할 때 사용

    CSS 적용 우선순위
        !important > inline style > ID style > class style > tag style
*/

/*  글꼴 관련 속성

    font-family
        글꼴 종류를 지정
        기본값은 웹 브라우저 기본 글꼴
    font-size
        글자 크기를 지정
    font-style
        글자를 이텔릭체로 표시할지 지정
    font-weight
        글자 굵기를 지정
    font-variant
        소문자를 작은 대문자로 바꾸는 속성
    
    웹 폰트
        온라인의 특정 서버에 위치한 폰트 파일을 다운로드하여 화면에 표시
        <link> 또는 @import를 사용하여 웹 폰트를 적용

    단위
        px
            픽셀 단위
        rem
            루트 요소의 글꼴 크기
        em
            요소의 글꼴 크기
        vw
            viewport 너비의 1%
        vh
            viewport 높이의 1%

    글자 색상
        color 속성으로 지정하며 속성값은 16진수, RGB, hsl, 색상 이름이 사용
        색상 키워드 표기법
            대소문자를 구분하지 않는 식별자이며 특정 색을 표시
            transparent 키워드
                투명한 색이며 색을 입힌 항목의 뒷편이 모두 보임
            currentColor 키워드
                요소의 color 속성값을 표시하며 다른 속성을 color 속성값으로 설정 가능
        RGB/RGBA 표기법
            빨강, 초록, 파랑을 통해 특정 색을 표현
            색의 투명도를 알파 채널로 표현 가능
            함수형 표기법인 rgb() 또는 rgba()으로 표현 가능
        16진수 표기법
            # 뒤의 16진수 표기법으로 표현 가능
        hsl/hsla 표기법
            HSL 색상 모델은 색상, 채도, 명도를 통해 특정 색상을 표현
            색의 투명도를 알파 채널로 표현 가능
            함수형 표기법인 hsl() 또는 hsla으로 표현
    
    그 외 글자 관련 속성
        text-align
            block element 또는 table-cell box 내에서 글자를 정렬할 때 사용
            ex) start, end, left, right, center, justify, justify-all, match-parent
        line-height
            줄 간격을 설정
            자간 < 어간 < 행간 순으로 넓어야 사용자가 읽기 편함
        line-height
            줄 높이를 정하는 속성
            default 값은 1.25이며 1.5 이상일 때 글을 읽기에 유리
        letter-spacing
            글자 사이의 간격
        word-spacing
            단어 사이의 간격
            픽셀 단위 또는 em으로 조정하는 것이 유리
        text-indent
            들여쓰기
        text-transform
            대문자 또는 소문자로 바꾸는 속성
        text-decoration
            글자를 꾸밀 때 사용
            <a> 태그의 밑줄을 없앨 때 주로 사용
            ex) underline, dotted, overline, none
        text-shadow
            글자에 그림자를 삽입 (가로, 세로, 번짐, 색상)
        list-style
            리스트 스타일 변경
        white-space
            요소가 공백 문자를 처리하는 법을 지정
        word-break
            텍스트가 자신의 콘텐츠 박스 밖으로 오버플로할 때 줄을 바꿀 지 지정
*/

/*  목록 관련 속성
        list-style 또는 list-style-type
            리스트의 글머리 기호 스타일을 변경
            네이게이션을 생성할 때 style을 제거하기 위해 주로 사용
            ex) circle, square, upper-alpha, none
*/

/*  표 관련 속성
        <table> 또는 <td>, <th> 태그에 border 속성을 사용하여 테두리 삽입 가능
        border-collapse: collapse; 속성을 사용하여 중복된 테두리를 하나로 결합
        background-color 속성을 사용하여 배경색을 지정
*/

/*  Box model
        모든 HTML 요소는 웹페이지에서 일정 공간을 차지
            공간을 CSS에서는 box model로 정의
        content
            텍스트 또는 이미지가 들어있는 HTML의 실질적인 내용
        padding
            content와 border 사이의 영역 (안쪽 여백)
        border
            content를 감싸는 테두리
        margin
            테두리와 이웃하는 요소 사이의 간격 (바깥쪽 여백)

    Box model CSS 속성
        content
            width
                가로 너비를 지정
            height
                세로 너비를 지정
        padding
            안쪽 여백을 지정 {(위아래, 좌우) 또는 (위, 우, 아래, 좌)}
            padding-{direction}
                ex) padding-top, padding-left, padding-right, padding-bottom
        border
            테두리를 설정
        margin
            바깥쪽 여백을 지정 {(위아래, 좌우) 또는 (위, 우, 아래, 좌)}
            margin-{direction}
                ex) margin-top, margin-left, margin-right, margin-bottom

    Box sizing
        HTML 요소의 너비와 높이를 계산하는 방법을 지정
        box-sizing 값
            content-box
                기본 CSS 박스 크기 결정법
                콘텐츠 영역은 일정하며 요소의 너비에 테두리와 안쪽 여백이 추가
            border-box
                테두리와 안쪽 여백을 요소의 크기로 고려
*/

/*  테두리 Border
        border-style
            테두리 스타일의 형태를 지정
            4개 방향의 값을 동시에 지정할 때는 방향 순서를 지켜야 함
                top -> right -> bottom -> left
        border-width
            테두리 두께를 지정
            속성값으로 <크기> 또는 thin, medium, thick 키워드가 가능
        border-color
            테두리 색상을 지정
        border
            단축 속성으로서 border-width, border-style, border-color 속성을 포함
            border-top, border-left, border-right, border-bottom을 사용하여 각각 지정 가능
        border-radius
            테두리 꼭짓점을 둥글게 생성
*/

/*  display 속성
        HTML 요소의 표현 방식을 결정
        기본 4가지 값
            none
                요소를 보이지 않게 설정
                영역도 차지하지 않음
            block
                가로 영역을 모두 채우며 요소 다음에 등장하는 태그는 줄바꿈이 됨
                width와 height 속성을 지정 가능
                <div>, <p>, <h1> ~ <h6> 태그 등이 해당
            inline
                컨텐츠만큼 영역을 차지
                block과 달리 줄바꿈이 되지 않으며 width와 height 속성을 지정 불가
            inline-block
                block과 inline의 중간 형태이며 요소는 inline이지만 내부는 block처럼 표시
                컨텐츠 영역만큼 영역을 차지하고 가로로 배치되지만 width와 height 속성을 지정 가능 
*/

/*  float 속성
        인접한 텍스트 또는 인라인 요소가 HTML 요소 주변을 자연스럽게 감싸게 함
        none
            기본값으로 요소를 띄우지 않음
        left
            왼쪽에 띄움
        right
            오른쪽에 띄움
        inherit
            부모 요소로부터 상속
        initial
            기본값으로 설정
    
    clear 속성
        float: left; 또는 float: right; 값을 취소
        clear: none;
            기본값
        clear: left;
            왼쪽을 취소
        clear: right;
            오른쪽을 취소
        clear: both;
            왼쪽, 오른쪽 둘 다 취소
*/

/*  position 속성
        HTML 요소를 배치하는 방법을 지정
        static
            기본값이며 요소가 HTML 문서에서 일반적인 흐름을 따라 배치가 되게 함
        relative
            요소가 일반적인 흐름에 따라 배치가 되게 하지만 속성에 의한 상대적인 위치에 배치됨
        absolute
            요소가 문서의 일반적인 흐름을 따르지 않게 함
            position: static 속성을 가지지 않은 부모를 기준으로 움직임
        fixed
            요소가 문서의 일반적인 흐름에서 제거
            스크린의 viewpoint를 기준으로 한 위치에 배치
                스크롤되어도 움직이지 않는 고정된 자리를 갖게 됨
        sticky
            요소가 HTML 문서 안에서 일반적인 흐름을 따라가다가 스크롤 위치가 임계점에 이르면 박스를 화면에 고정함
    
    위치 속성
        top, left, bottom, right 속성은 요소를 원하는 곳으로 최종적으로 위치시키는 속성
        z-index
            HTML의 배치 순서를 결정하는 속성
            position(relative, absolute, fixed) 속성이 적용된 요소에서만 작동
*/

/*  배경 이미지 스타일
        background-color
            HTML 요소의 배경색을 지정
        background-image
            HTML 요소에 배경 이미지를 한 개 또는 여러 개를 지정
        background-repeat
            배경 이미지의 반복 방법을 지정
            가로축 및 세로축을 따라 반복 가능하며 반복하지 않을 수도 있음
            repeat
                가로, 세로 반복
            no-repeat
                반복하지 않음
            repeat-x
                가로 반복
            repeat-y
                세로 반복
        background-position
            배경 이미지의 초기 위치를 설정
            background-position: center; (keyword values)
            background-position: 25% 75%; (<percentage> values)
            background-position: bottom 10px right 20px; (edge offsets values)
        background-attachment
            배경 이미지를 뷰포트 내에서의 고정 여부를 지정
            scroll
                기본값이며 선택한 요소와 같이 움직임
                내용을 스크롤하면 배경 이미지는 스크롤되지 않음
            fixed
                움직이지 않음
            local
                선택한 요소와 같이 움직임
                내용을 스크롤하면 배경 이미지도 스크롤됨
            initial
                기본값으로 설정
            inherit
                부모 요소의 속성값을 상속
            키워드 값(scroll, fixed, local)과 전역 값(inherit, initial, unset)으로 구분
        background
            background-image, repeat, position, attachment 속성을 동시에 선언
            ex) background: url('images/x.png') repeat center scroll;
        background-size
            요소 배경 이미지의 크기를 설정
            contain
                이미지가 짤리거나 찌그러지지 않는 한도 내에서 제일 크게 설정
            cover
                이미지가 찌그러지지 않는 한도 내에서 제일 크게 설정
                이미지의 가로세로비가 요소와 다르다면 이미지를 잘라내어 빈 공간을 생기지 않게 함
            auto
                배경 이미지의 원본 크기를 유지
            <length>
                원본 크기의 너비와 높이를 주어진 값으로 늘리거나 줄임
            <percentage>
                배경 위치 지정 영역의 지정된 백분율에 해당하는 크기로 이미지를 늘림

    그라데이션
        두 가지 이상의 색상이 연결되면서 자연스럽게 보여주는 것
        선형 그라데이션
            linear-gradient() 함수를 사용하여 두 개 이상의 색상이 직선을 따라 점진적으로 변화함
            ex) background: linear-gradient(red, blue);
                to 키워드를 사용하여 방향을 결정
                ex) background: linear-gradient(to bottom, red, black);
                deg 키워드를 사용하여 각도값을 지정
                ex) background: linear-gradient(45deg, whith, black);
        원형 그라데이션
            타원형
                radial-gradient() 함수를 사용하여 타원형 그라데이션을 생성
                ex) background: radial-gradient(red, green, blue);
            정원
                radial-gradient(circle) 함수를 사용하여 타원형 그라데이션 생성
                ex) background: radial-gradient(circle at 20% 20%, red, green, blue);
*/

/*  transform
        HTML 요소를 회전, 크기 조절, 기울이기, 이동 효과를 나타낼 때 사용
        해당 요소의 display 속성이 block 또는 inline-block일 때 사용 가능
        translate(tx, ty)
            지정한 크기만큼 x축, y축으로 이동
        translateX(tx)
            지정한 크기만큼 x축으로 이동
        translateY(ty)
            지정한 크기만큼 y축으로 이동
        scale(sx, sy)
            지정한 크기만큼 x축과 y축으로 확대 및 축소
        scaleX(sx)
            지정한 크기만큼 x축으로 확대 및 축소
        scaleY(sy)
            지정한 크기만큼 y축으로 확대 및 축소
        rotate(angle)
            지정한 각도만큼 회전 ( + 시계방향, - 반시계방향)
        rotateX(angle)
            x축 기준으로 지정한 각도만큼 회전
        rotateY(angle)
            y축 기준으로 지정한 각도만큼 회전
        rotateZ(angle)
            z축 기준으로 지정한 각도만큼 회전
        rotate 함수의 경우 입체감 있게 표현하려면 perspective 속성을 부모 요소에 적용해야 함
        skew(ax, ay)
            지정한 각도만큼 x축과 y축으로 왜곡
        skewX(ax)
            지정한 각도만큼 x축으로 왜곡
        skewY(ay)
            지정한 각도만큼 y축으로 왜곡

    transition
        속성 값이 변할 때 부드럽게 전환될 수 있도록 도움
        transition-property
            어떤 속성에 트랜지션 효과를 줄 것인지 지정
            ex) transition-property: <attr1>, <attr2>;
            all
                모든 속성을 지정 (생략 가능)
            none
                아무것도 지정하지 않음
        transition-duration
            트랜지션 효과를 몇 초 동안 실행할 것인지 지정
        transition-delay
            지정한 시간(초)만큼 기다렸다가 실행할 때 사용
        transition-timing-function
            트랜지션의 속도를 지정
            linear
                트랜지션의 시작과 끝의 속도가 일정
            ease-in
                천천히 시작했다가 완료될 때 속도가 증가
            ease-out
                빨리 시작했다가 완료될 때 속도가 감소
        transition
            transition의 모든 속성을 동시에 표기할 수 있는 단축속성
*/

/*  Animation 속성
        
    animation-name
        애니메이션의 중간 상태를 지정하기 위한 이름을 정의
            중간 상태는 @keyframes 규칙을 이용하여 기술
    animation-duration
        한 cycle의 애니메이션이 재생되는 시간을 지정
    animation-delay
        엘리먼트가 로드되고 나서 언제 애니메이션이 시작될지 지정
    animation-iteration-count
        애니메이션이 몇 번 반복될 지 지정
        infinite로 지정하여 무한히 반복할 수 있음
    animation-play-state
        애니메이션을 멈추거나 다시 시작할 수 있음
    animation-timing-function
        중간 상태들의 전환을 어떤 시간간격으로 진행할지 지정
    animation-fill-mode
        애니메이션이 시작되기 전이나 끝나고 난 후 어떤 값이 적용될지 지정
    animation
        animation-*들의 단일 속성을 동시에 작성
*/

/*  반응형 웹사이트
        여러가지 디바이스의 해상도에 반응하여 각각에 맞는 최적의 화면을 보여주는 홈페이지
    
    뷰포트(viewport)
        웹 브라우저에서 실제 내용이 표시되는 영역
        모바일 viewport와 PC viewport는 크기가 다름
        메타 뷰포트 태그 지정하는 법
            <meta name="viewport" content="attr1=value1, attr2=value2, ...">
        메타 뷰포트 태그 속성
            width
                viewport 가로
            height
                viewport 세로
            user-scalable
                사용자 확대/축소 가능 여부
            initial-scale
                초기 화면 비율
            maximum-scale
                최대 화면 비율
            minimum-scale
                최소 화면 비율
        일반적인 방법
            viewport의 너비를 디바이스 화면 너비에 맞추고 초기화면 배율을 1로 지정
                <meta name="viewport" content="width=device=width, initial-scale=1">
        뷰포트 단위
            vw(viewport width)
                뷰포트 너비
                100vw = viewport width의 100%
            vh(viewport height)
                뷰포트 높이
                100vh = viewport height의 100%
            vmin(viewport minimum)
                뷰포트의 너비와 높이 중에서 작은 값
            vmax(viewport maximum)
                뷰포트의 너비와 높이 중에서 큰 값

    미디어 쿼리
        접속하는 디바이스 또는 뷰포트에 따라 특정 CSS 스타일을 사용하는 방법
        미디어 쿼리 문법
            @media 키워드를 사용하여 특정 미디어(디바이스)에서 어떤 CSS를 적용할 것인지 지정
                특정 구간을 중단점(breakpoint)라고 부름
            기본형
                @media [only|not] media type [and condition] * [and condition]
                only
                    미디어 쿼리를 지원하지 않는 웹 브라우저에서는 실행하지 않음 (거의 사용하지 않음)
                not
                    다음에 지정하는 미디어 유형을 제외
                and
                    조건을 여러 개 연결하여 추가
            ex) @media screen and (min-width: 768px) and (max-width: 1439px)
        미디어 유형
            all
                모든 장치에 적합
            print
                인쇄 결과물 및 출력 미리보기 화면에 표시 중인 문서
            screen
                주로 화면이 대상
            speech
                음성 합성장치 대상
        자주 사용하는 미디어 쿼리 조건
            min-width
                웹 뷰포트의 최소 너비
            max-width
                웹 뷰포트의 최대 너비
*/

/*  flexbox
        뷰포트나 요소의 크기가 불명확하거나 동적으로 변할 때 사용
        효율적으로 HTML 요소를 배치, 정렬, 분산할 수 있는 CSS3의 새로운 레이아웃 방식
        복잡한 계산 없이 요소의 크기와 순서를 유연하게 배치
        flexbox 구성
            배치하고 싶은 HTML 요소인 flex item과 상위 부모 요소인 flex container로 구성
            flex container
                flex item을 감싸고 있는 부모 요소
            flex item
                flex container 내에 있는 여러 개의 자식 요소
        flexbox 만들기
            정렬하려는 요소(flex item)의 부모 요소(flex container)에 display: flex 속성을 지정
            부모 요소가 inline 요소일 경우 inline-flex를 지정
        flexbox 주축
            flex item은 main axis에 따라 정렬
            주축의 방향은 flex container의 flex-direction 속성으로 결정
            row
                기본값이며 주축의 방향이 왼쪽에서 오른쪽 방향
            column
                주축의 방향이 위에서 아래 방향
        flexbox 속성 분류
            flex container
                전체적인 정렬이나 흐름에 관련된 속성
                flex-direction
                    flex container의 main axis 방향을 설정
                    row
                        기본값이며 좌에서 우로 수평 배치
                    row-reverse
                        우에서 좌로 수평 배치
                    column
                        위에서 아래로 수직 배치
                    column-reverse
                        아래에서 위로 수직 배치
                flex-wrap
                    여러 개의 flex item을 한 줄 또는 여러 줄로 배치
                    nowrap
                        기본값이며 flex item을 개행하지 않고 1행에 배치
                        각 flex item의 width는 flex container에 들어갈 수 있는 크기로 축소
                    wrap
                        flex item들의 width의 합계가 flex container의 width보다 큰 경우 flex item을 개행하여 배치
                        기본적으로 좌에서 우로 또는 위에서 아래로 배치
                    wrap-reverse
                        wrap과 동일하지만 아래에서 위로 배치
                flex-flow
                    flex-direction과 flex-wrap 속성을 설정하기 위한 단축속성
                    기본값은 row nowrap
                    ex) .flex-container {
                            flex-flow: <flex-direction> || <flex-wrap>;
                        }
                justify-content
                    flex container의 main axis를 기준으로 flex item을 수평 정렬
                    flex-start
                        기본값이며 main start(좌측)를 기준으로 정렬
                    flex-end
                        main end(우측)를 기준으로 정렬
                    center
                        flex container의 중앙에 정렬
                    space-between
                        첫번째와 마지막 flex item은 좌우 측면에 정렬
                        나머지는 균등한 간격으로 정렬
                    space-around
                        모든 flex item은 균등한 간격으로 정렬
                align-content
                    flex container의 cross axis를 기준으로 flex item을 수직 정렬
                    stretch
                        기본값이며 모든 flex item은 균등하게 분배된 공간에 정렬되어 배치
                    flex-start
                        모든 flex item은 flex container의 cross start 기준으로 stack 정렬
                    flex-end
                        모든 flex item은 flex container의 cross end 기준으로 stack 정렬
                    center
                        모든 flex item은 flex container의 cross axis의 중앙에 stack 정렬
                    space-between
                        첫번째 flex item의 행은 flex container의 상단에 배치
                        마지막 flex item의 행은 flex container의 하단에 배치
                        나머지 행은 균등하게 분할된 공간에 정렬되어 배치
                    space-around
                        모든 flex item은 균등하게 분할된 공간 내에 정렬되어 배치
                align-items
                    flex item을 flex container의 수직 방향(cross axis)으로 정렬
                    모든 flex item에 적용
                    stretch
                        기본값이며 모든 flex item은 flex container의 높이에 꽉찬 높이를 가짐
                    flex-start
                        모든 flex item은 flex container의 cross start 기준으로 정렬
                    flex-end
                        모든 flex item은 flex container의 cross end 기준으로 정렬
                    center
                        모든 flex item은 flex container의 cross axis의 중앙부터 배치
                    baseline
                        모든 flex item은 flex container의 baseline을 기준으로 정렬
                    align-items는 flex line을 기준으로 정렬하지만 align-content는 flex line을 정렬

            flex item
                자식 요소의 크기나 순서에 관련된 속성
                flex, flex-grow, flex-shrink, flex-basis, order, align-self
                order
                    flex item의 배치 순서를 지정
                    HTML 코드를 변경하지 않고 order 속성값을 지정하는 것으로 간단히 재배치
                    기본값은 0이며 기본 배치 순서는 flex container에 추가된 순서
                flex-order
                    flex item의 너비에 대한 확대 인자를 지정
                    기본값은 0이며 음수값은 무효
                    모든 flex item이 동일한 flow-grow 값을 가지면 모든 flex item은 동일한 너비를 가짐
                    두번째 flex item의 flex-grow 속성값을 3으로 지정하면 다른 flex item보다 더 넓은 너비를 가짐
                flex-shrink
                    flex item의 너비에 대한 축소 인자를 지정
                    기본값이며 1이며 음수값은 무효
                    0을 지정하면 축소가 해제되어 원래 너비를 유지
                    기본적으로 모든 flex item은 축소된 상태로 지정
                    두번째 flex item만 축소를 해제하면 원래의 너비를 유지
                flex
                    flex-grow, shrink, basis 속성의 단축속성(shorthand)
                    기본값은 0 1 auto
                align-self
                    align-items 속성보다 우선하여 개별 flex item을 정렬
                    기본값은 auto이며 세번째, 네번째 flex item은 aligns-self 속성값이 우선 적용
*/
